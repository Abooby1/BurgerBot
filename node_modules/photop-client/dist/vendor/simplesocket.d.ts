export default class SimpleSocket {
    constructor(init: any);
    id: any;
    token: any;
    socketURL: string;
    supportsETF: any;
    operations: {};
    totalMessages: number;
    remotes: {};
    debug(message: any, force: any, error: any): void;
    send(oper: any, data: any, callback: any, useID: any): any;
    handleMessage(recData: any): void;
    clientID: any;
    serverID: any;
    secureID: string | null | undefined;
    expectClose: boolean | undefined;
    connectSocket(): void;
    socket: WebSocket | undefined;
    intervalTryConnect: NodeJS.Timer | null | undefined;
    closed(): void;
    hash(text: any): number;
    setDefaultConfig(newSet: any): void;
    defaultConfig: any;
    setDisconnectEvent(filter: any, data: any, config: any): void;
    disconnectEvent: any;
    subscribe(filter: any, callback: any, config: any): {
        id: any;
        edit: (newFilter: any) => void;
        close: () => void;
    };
    publish(filter: any, data: any, config: any): void;
    remote(secureID: any): {
        clientID: any;
        secureID: any;
        subscribe: (funcName: any, filter: any, config: any) => void;
        closeSubscribe: (funcName: any) => void;
    };
}
import WebSocket = require("ws");
